@page "/order-confirmation/{orderId:int}"
@using HidaSushi.Shared.Models
@using HidaSushi.Client.Services
@inject IApiService ApiService
@inject NavigationManager Navigation
@inject ILocalizationService LocalizationService
@inject IJSRuntime JSRuntime
@inherits FlowbitePage

<PageTitle>Order Confirmation - HIDA SUSHI</PageTitle>

<!-- Success Hero Section -->
<section class="bg-gradient-to-br from-green-50 via-emerald-50 to-blue-50 py-16 lg:py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
            <!-- Success Animation -->
            <div class="mb-8">
                <div class="w-24 h-24 mx-auto bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center shadow-2xl animate-bounce">
                    <svg class="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                    </svg>
                </div>
            </div>
            
            <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold text-gray-900 mb-6">
                Order <span class="bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent">Confirmed!</span>
            </h1>
            
            <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed mb-8">
                Thank you for your order! Your delicious sushi is being prepared with love and will be ready soon.
            </p>
            
            @if (order != null)
            {
                <div class="inline-flex items-center px-6 py-3 bg-white rounded-2xl shadow-lg border border-gray-200">
                    <span class="text-sm font-medium text-gray-600 mr-2">Order Number:</span>
                    <span class="text-lg font-bold text-gray-900">@order.OrderNumber</span>
                </div>
            }
        </div>
    </div>
</section>

<!-- Order Details Section -->
<section class="py-16 bg-white">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
        @if (isLoading)
        {
            <div class="text-center py-12">
                <div class="animate-spin rounded-full h-16 w-16 border-b-4 border-green-600 mx-auto mb-4"></div>
                <p class="text-gray-600 text-lg">Loading order details...</p>
            </div>
        }
        else if (order != null)
        {
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
                <!-- Order Information -->
                <div class="bg-gradient-to-br from-gray-50 to-white rounded-3xl shadow-lg border border-gray-200 p-8">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                        <svg class="w-6 h-6 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                        </svg>
                        Order Information
                    </h2>
                    
                    <div class="space-y-4">
                        <div class="flex justify-between items-center py-2 border-b border-gray-200">
                            <span class="text-gray-600">Order Number:</span>
                            <span class="font-semibold text-gray-900">@order.OrderNumber</span>
                        </div>
                        
                        <div class="flex justify-between items-center py-2 border-b border-gray-200">
                            <span class="text-gray-600">Order Type:</span>
                            <span class="font-semibold text-gray-900">
                                @if (order.Type == OrderType.Delivery)
                                {
                                    <span class="inline-flex items-center">
                                        üöö Delivery
                                    </span>
                                }
                                else
                                {
                                    <span class="inline-flex items-center">
                                        üì¶ Pickup
                                    </span>
                                }
                            </span>
                        </div>
                        
                        <div class="flex justify-between items-center py-2 border-b border-gray-200">
                            <span class="text-gray-600">Status:</span>
                            <span class="inline-flex items-center px-3 py-1 bg-green-100 text-green-800 text-sm font-medium rounded-full">
                                @order.Status
                            </span>
                        </div>
                        
                        <div class="flex justify-between items-center py-2 border-b border-gray-200">
                            <span class="text-gray-600">Payment Method:</span>
                            <span class="font-semibold text-gray-900">
                                @order.PaymentMethod switch
                                {
                                    PaymentMethod.Stripe => "üí≥ Credit Card",
                                    PaymentMethod.PayPal => "üÖøÔ∏è PayPal",
                                    PaymentMethod.CashOnDelivery => "üíµ Cash on Delivery",
                                    _ => order.PaymentMethod.ToString()
                                }
                            </span>
                        </div>
                        
                        @if (order.Type == OrderType.Delivery)
                        {
                            <div class="flex justify-between items-start py-2 border-b border-gray-200">
                                <span class="text-gray-600">Delivery Address:</span>
                                <span class="font-semibold text-gray-900 text-right">@order.DeliveryAddress</span>
                            </div>
                            
                            <div class="bg-blue-50 border border-blue-200 rounded-xl p-4 mt-4">
                                <div class="flex items-start">
                                    <svg class="w-5 h-5 text-blue-600 mt-0.5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                                    </svg>
                                    <div>
                                        <p class="text-sm font-medium text-blue-900">Estimated Delivery Time</p>
                                        <p class="text-sm text-blue-700">25-35 minutes from confirmation</p>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="bg-green-50 border border-green-200 rounded-xl p-4 mt-4">
                                <div class="flex items-start">
                                    <svg class="w-5 h-5 text-green-600 mt-0.5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                    </svg>
                                    <div>
                                        <p class="text-sm font-medium text-green-900">Pickup Information</p>
                                        <p class="text-sm text-green-700">Ready for pickup in 15-25 minutes</p>
                                        <p class="text-sm text-green-700 mt-1">üìç HIDA SUSHI - 123 Brussels Street, Brussels</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                
                <!-- Order Summary -->
                <div class="bg-gradient-to-br from-gray-50 to-white rounded-3xl shadow-lg border border-gray-200 p-8">
                    <h2 class="text-2xl font-bold text-gray-900 mb-6 flex items-center">
                        <svg class="w-6 h-6 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
                        </svg>
                        Order Summary
                    </h2>
                    
                    <!-- Order Items -->
                    <div class="space-y-4 mb-6">
                        @if (order.Items?.Any() == true)
                        {
                            @foreach (var item in order.Items)
                            {
                                <div class="flex justify-between items-center py-3 border-b border-gray-200 last:border-b-0">
                                    <div class="flex-1">
                                        <h4 class="font-medium text-gray-900">
                                            @if (item.SushiRollId.HasValue)
                                            {
                                                @(item.SpecialInstructions ?? "Sushi Roll")
                                            }
                                            else
                                            {
                                                @(item.SpecialInstructions ?? "Custom Roll")
                                            }
                                        </h4>
                                        <p class="text-sm text-gray-600">Quantity: @item.Quantity</p>
                                    </div>
                                    <div class="text-right">
                                        <p class="font-semibold text-gray-900">‚Ç¨@item.Price.ToString("F2")</p>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    
                    <!-- Price Breakdown -->
                    <div class="border-t border-gray-200 pt-6 space-y-3">
                        <div class="flex justify-between text-gray-600">
                            <span>Subtotal:</span>
                            <span>‚Ç¨@order.SubtotalAmount.ToString("F2")</span>
                        </div>
                        
                        @if (order.DeliveryFee > 0)
                        {
                            <div class="flex justify-between text-gray-600">
                                <span>Delivery Fee:</span>
                                <span>‚Ç¨@order.DeliveryFee.ToString("F2")</span>
                            </div>
                        }
                        
                        <div class="flex justify-between text-gray-600">
                            <span>Tax:</span>
                            <span>‚Ç¨@order.TaxAmount.ToString("F2")</span>
                        </div>
                        
                        <div class="border-t border-gray-300 pt-3">
                            <div class="flex justify-between text-xl font-bold text-gray-900">
                                <span>Total:</span>
                                <span>‚Ç¨@order.TotalAmount.ToString("F2")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Action Buttons -->
            <div class="text-center mt-12">
                <div class="space-y-4 sm:space-y-0 sm:space-x-4 sm:flex sm:justify-center">
                    <button @onclick="GoToTrackOrder" 
                            class="w-full sm:w-auto bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold py-4 px-8 rounded-2xl transition-all duration-300 transform hover:scale-105 shadow-lg">
                        <span class="flex items-center justify-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4"></path>
                            </svg>
                            Track Your Order
                        </span>
                    </button>
                    
                    <button @onclick="GoToMenu" 
                            class="w-full sm:w-auto bg-white border-2 border-gray-300 hover:border-green-500 text-gray-700 hover:text-green-600 font-semibold py-4 px-8 rounded-2xl transition-all duration-300 transform hover:scale-105">
                        <span class="flex items-center justify-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                            </svg>
                            Order Again
                        </span>
                    </button>
                </div>
            </div>
        }
        else
        {
            <!-- Order Not Found -->
            <div class="text-center py-16">
                <div class="w-16 h-16 mx-auto bg-red-100 rounded-full flex items-center justify-center mb-6">
                    <svg class="w-8 h-8 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-2.694-.833-3.464 0L3.349 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                    </svg>
                </div>
                <h3 class="text-2xl font-bold text-gray-900 mb-2">Order Not Found</h3>
                <p class="text-gray-600 mb-6">We couldn't find the order you're looking for.</p>
                <button @onclick="GoToMenu" 
                        class="bg-gradient-to-r from-green-600 to-blue-600 hover:from-green-700 hover:to-blue-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300">
                    Back to Menu
                </button>
            </div>
        }
    </div>
</section>

@code {
    [Parameter] public int OrderId { get; set; }
    
    private Order? order;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadOrder();
    }

    private async Task LoadOrder()
    {
        try
        {
            isLoading = true;
            StateHasChanged();
            
            // Get order from API
            order = await ApiService.GetOrderByIdAsync(OrderId);
            
            if (order == null)
            {
                Console.WriteLine($"Order with ID {OrderId} not found");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading order: {ex.Message}");
            order = null;
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void GoToTrackOrder()
    {
        if (order != null)
        {
            Navigation.NavigateTo($"/track-order?orderNumber={order.OrderNumber}");
        }
    }

    private void GoToMenu()
    {
        Navigation.NavigateTo("/menu");
    }
} 