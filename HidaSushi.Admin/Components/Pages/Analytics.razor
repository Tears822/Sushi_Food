@page "/analytics"
@using HidaSushi.Shared.Models
@using HidaSushi.Admin.Services
@inject AdminApiService ApiService
@inject IJSRuntime JSRuntime

<PageTitle>Analytics - HIDA SUSHI Admin</PageTitle>

<AuthGuard>
    <!-- Analytics Header -->
    <div class="bg-gradient-to-r from-green-600 to-teal-600 text-white p-6">
        <div class="container mx-auto">
            <div class="flex items-center justify-between">
                <div>
                    <h1 class="text-3xl font-bold">ðŸ“ˆ Analytics Dashboard</h1>
                    <p class="text-green-100">Business insights â€¢ Sales reports â€¢ Performance metrics</p>
                </div>
                <div class="flex items-center space-x-4">
                    <input type="date" @bind="selectedDate"
                           class="bg-white bg-opacity-20 text-white placeholder-green-200 border border-green-300 rounded-lg px-3 py-2" />
                    <button @onclick="RefreshAnalytics" 
                            class="bg-white bg-opacity-20 hover:bg-opacity-30 text-white px-4 py-2 rounded-lg transition-colors flex items-center">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/>
                        </svg>
                        Refresh
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Stats Overview -->
    <div class="bg-gray-50 py-8">
        <div class="container mx-auto px-4">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-blue-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Total Orders</p>
                            <p class="text-3xl font-bold text-gray-900">@analytics.TotalOrders</p>
                            <p class="text-sm text-blue-600">@selectedDate.ToString("MMM dd, yyyy")</p>
                        </div>
                        <div class="bg-blue-100 p-3 rounded-full">
                            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"/>
                            </svg>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-green-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Total Revenue</p>
                            <p class="text-3xl font-bold text-gray-900">â‚¬@analytics.TotalRevenue.ToString("F2")</p>
                            <p class="text-sm text-green-600">Daily total</p>
                        </div>
                        <div class="bg-green-100 p-3 rounded-full">
                            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"/>
                            </svg>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-purple-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Average Order Value</p>
                            <p class="text-3xl font-bold text-gray-900">â‚¬@analytics.AverageOrderValue.ToString("F2")</p>
                            <p class="text-sm text-purple-600">Per order</p>
                        </div>
                        <div class="bg-purple-100 p-3 rounded-full">
                            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                            </svg>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-orange-500">
                    <div class="flex items-center justify-between">
                        <div>
                            <p class="text-sm font-medium text-gray-600">Avg. Prep Time</p>
                            <p class="text-3xl font-bold text-gray-900">@((int)analytics.AveragePrepTime.TotalMinutes)m</p>
                            <p class="text-sm text-orange-600">Per roll</p>
                        </div>
                        <div class="bg-orange-100 p-3 rounded-full">
                            <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
                            </svg>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts and Detailed Analytics -->
    <div class="container mx-auto px-4 py-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            
            <!-- Order Type Distribution -->
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
                    <svg class="w-5 h-5 mr-2 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"/>
                    </svg>
                    Order Type Distribution
                </h3>
                
                <div class="space-y-4">
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="w-4 h-4 bg-blue-600 rounded mr-3"></div>
                            <span class="text-gray-700">Delivery Orders</span>
                        </div>
                        <div class="text-right">
                            <span class="font-bold text-gray-900">@analytics.DeliveryOrders</span>
                            <span class="text-sm text-gray-500 ml-2">(@(analytics.TotalOrders > 0 ? (analytics.DeliveryOrders * 100.0 / analytics.TotalOrders).ToString("F1") : "0")%)</span>
                        </div>
                    </div>
                    
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div class="bg-blue-600 h-2 rounded-full" style="width: @(analytics.TotalOrders > 0 ? (analytics.DeliveryOrders * 100.0 / analytics.TotalOrders).ToString("F1") : "0")%"></div>
                    </div>
                    
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <div class="w-4 h-4 bg-green-600 rounded mr-3"></div>
                            <span class="text-gray-700">Pickup Orders</span>
                        </div>
                        <div class="text-right">
                            <span class="font-bold text-gray-900">@analytics.PickupOrders</span>
                            <span class="text-sm text-gray-500 ml-2">(@(analytics.TotalOrders > 0 ? (analytics.PickupOrders * 100.0 / analytics.TotalOrders).ToString("F1") : "0")%)</span>
                        </div>
                    </div>
                    
                    <div class="w-full bg-gray-200 rounded-full h-2">
                        <div class="bg-green-600 h-2 rounded-full" style="width: @(analytics.TotalOrders > 0 ? (analytics.PickupOrders * 100.0 / analytics.TotalOrders).ToString("F1") : "0")%"></div>
                    </div>
                </div>
            </div>

            <!-- Order Status Breakdown -->
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
                    <svg class="w-5 h-5 mr-2 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                    </svg>
                    Order Status Overview
                </h3>
                
                <div class="grid grid-cols-2 gap-4">
                    <div class="text-center p-4 bg-green-50 rounded-lg">
                        <div class="text-2xl font-bold text-green-600">@analytics.CompletedOrders</div>
                        <div class="text-sm text-green-700">Completed</div>
                    </div>
                    <div class="text-center p-4 bg-red-50 rounded-lg">
                        <div class="text-2xl font-bold text-red-600">@analytics.CancelledOrders</div>
                        <div class="text-sm text-red-700">Cancelled</div>
                    </div>
                </div>
                
                <div class="mt-4 text-center">
                    <div class="text-lg font-semibold text-gray-700">
                        Success Rate: @(analytics.TotalOrders > 0 ? (analytics.CompletedOrders * 100.0 / analytics.TotalOrders).ToString("F1") : "0")%
                    </div>
                </div>
            </div>

            <!-- Most Popular Rolls -->
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
                    <svg class="w-5 h-5 mr-2 text-amber-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"/>
                    </svg>
                    Most Popular Rolls
                </h3>
                
                <div class="space-y-3">
                    @foreach (var roll in analytics.PopularRolls.Take(5))
                    {
                        <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                            <div class="flex items-center">
                                <div class="w-8 h-8 bg-amber-500 text-white rounded-full flex items-center justify-center text-sm font-bold mr-3">
                                    @(analytics.PopularRolls.IndexOf(roll) + 1)
                                </div>
                                <div>
                                    <div class="font-medium text-gray-900">@roll.Name</div>
                                    <div class="text-sm text-gray-500">@roll.Count orders</div>
                                </div>
                            </div>
                            <div class="text-right">
                                <div class="font-bold text-amber-600">@roll.Percentage.ToString("F1")%</div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Most Popular Ingredients -->
            <div class="bg-white rounded-xl shadow-lg p-6">
                <h3 class="text-xl font-bold text-gray-900 mb-4 flex items-center">
                    <svg class="w-5 h-5 mr-2 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z"/>
                    </svg>
                    Most Popular Ingredients
                </h3>
                
                <div class="space-y-3">
                    @foreach (var ingredient in analytics.PopularIngredients.Take(5))
                    {
                        <div class="flex items-center justify-between">
                            <div class="flex items-center">
                                <div class="w-6 h-6 bg-green-500 text-white rounded-full flex items-center justify-center text-xs font-bold mr-3">
                                    @(analytics.PopularIngredients.IndexOf(ingredient) + 1)
                                </div>
                                <span class="text-gray-700">@ingredient.Name</span>
                            </div>
                            <div class="flex items-center">
                                <span class="font-bold text-gray-900 mr-2">@ingredient.Count</span>
                                <div class="w-20 bg-gray-200 rounded-full h-2">
                                    <div class="bg-green-600 h-2 rounded-full" style="width: @ingredient.Percentage.ToString("F0")%"></div>
                                </div>
                                <span class="text-sm text-gray-500 ml-2">@ingredient.Percentage.ToString("F1")%</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Hourly Order Distribution -->
        <div class="mt-8 bg-white rounded-xl shadow-lg p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-6 flex items-center">
                <svg class="w-5 h-5 mr-2 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3 3 3 4-4M8 21l4-4 4 4M3 4h18M4 4h16v12a1 1 0 01-1 1H5a1 1 0 01-1-1V4z"/>
                </svg>
                Hourly Order Distribution
            </h3>
            
            <div class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-12 gap-4">
                @for (int hour = 0; hour < 24; hour++)
                {
                    var orderCount = analytics.HourlyOrderCounts.ContainsKey(hour) ? analytics.HourlyOrderCounts[hour] : 0;
                    var maxOrders = analytics.HourlyOrderCounts.Values.DefaultIfEmpty(1).Max();
                    var heightPercentage = maxOrders > 0 ? (orderCount * 100.0 / maxOrders) : 0;
                    
                    <div class="text-center">
                        <div class="mb-2 relative">
                            <div class="w-full bg-gray-200 rounded h-20 flex items-end">
                                <div class="w-full bg-indigo-600 rounded" 
                                     style="height: @heightPercentage.ToString("F0")%"></div>
                            </div>
                            @if (orderCount > 0)
                            {
                                <div class="absolute top-0 w-full text-xs font-bold text-indigo-600">@orderCount</div>
                            }
                        </div>
                        <div class="text-xs text-gray-600 font-medium">@hour.ToString("00"):00</div>
                    </div>
                }
            </div>
            
            <div class="mt-4 text-center text-sm text-gray-600">
                Peak hours: @GetPeakHours() â€¢ Total orders tracked across 24 hours
            </div>
        </div>

        <!-- Performance Metrics -->
        <div class="mt-8 grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="bg-white rounded-xl shadow-lg p-6 text-center">
                <div class="text-3xl mb-2">âš¡</div>
                <div class="text-2xl font-bold text-gray-900">@((int)analytics.AveragePrepTime.TotalMinutes)</div>
                <div class="text-sm text-gray-600">Avg. Prep Time (min)</div>
                <div class="text-xs text-green-600 mt-1">Target: 15-20 min</div>
            </div>
            
            <div class="bg-white rounded-xl shadow-lg p-6 text-center">
                <div class="text-3xl mb-2">ðŸŽ¯</div>
                <div class="text-2xl font-bold text-gray-900">@(analytics.TotalOrders > 0 ? (analytics.CompletedOrders * 100.0 / analytics.TotalOrders).ToString("F1") : "0")%</div>
                <div class="text-sm text-gray-600">Success Rate</div>
                <div class="text-xs text-green-600 mt-1">Target: >95%</div>
            </div>
            
            <div class="bg-white rounded-xl shadow-lg p-6 text-center">
                <div class="text-3xl mb-2">ðŸ’°</div>
                <div class="text-2xl font-bold text-gray-900">â‚¬@analytics.AverageOrderValue.ToString("F2")</div>
                <div class="text-sm text-gray-600">Avg. Order Value</div>
                <div class="text-xs text-blue-600 mt-1">Target: â‚¬25+</div>
            </div>
        </div>
    </div>
</AuthGuard>

@code {
    private DailyAnalytics analytics = new();
    private DateTime selectedDate = DateTime.Today;

    protected override async Task OnInitializedAsync()
    {
        await LoadAnalytics();
    }

    private async Task LoadAnalytics()
    {
        try
        {
            analytics = await ApiService.GetDailyAnalyticsAsync(selectedDate);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "Error loading analytics:", ex.Message);
        }
        finally
        {
            StateHasChanged();
        }
    }

    private async Task OnDateChanged()
    {
        await LoadAnalytics();
    }

    private async Task RefreshAnalytics()
    {
        await LoadAnalytics();
    }

    private string GetPeakHours()
    {
        if (!analytics.HourlyOrderCounts.Any())
            return "No data";

        var maxOrders = analytics.HourlyOrderCounts.Values.Max();
        var peakHours = analytics.HourlyOrderCounts
            .Where(kvp => kvp.Value == maxOrders)
            .Select(kvp => $"{kvp.Key:00}:00")
            .ToList();

        return string.Join(", ", peakHours);
    }
} 